# Default values for admin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: asia-northeast3-docker.pkg.dev/project/repo/image  # repository URL(GAR or GCR)
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # image TAG

imagePullSecrets: []
nameOverride: "somaz" 
fullnameOverride: "somaz"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  backendConfig:
    ports:
      http: somaz # backendConfig name

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "somaz-gke-lb-ip" # loadbalancer static IP
    networking.gke.io/managed-certificates: "somaz" # managed-certificates name
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/v1beta1.FrontendConfig: somaz # FrontendConfig name
  hosts:
    - host: somaz.link # Domain 
      paths:
      - pathType: Prefix
        path: "/" 
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1000m
    memory: 3072Mi
  requests:
    cpu: 1000m
    memory: 3072Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.

managedCertificate:
  domain: somaz.link # Domain

backendConfig:
  healthCheck:
    checkIntervalSec: 30
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /health
    port: 8080 # targetport
  customRequestHeaders:
    headers:
    - "X-Client-Region:{client_region}"
    - "X-Client-City:{client_city}"

frontendConfig:
  redirectToHttpsEnabled: true # HTTP -> HTTPS redirected

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

namespace: somaz

envConfig: # envconfig
  NODE_ENV: somaz 
  ENVIRONMENT: somaz

sidecars:
  enabled: true # false if you don't need a sidecar
  containers:
    - name: promtail
      securityContext: {}
      image: grafana/promtail:master
      imagePullPolicy: IfNotPresent
      args:
        - "-config.file=/etc/promtail/promtail.yaml"
        - "-client.url=http://loki.somaz.link/api/prom/push" # loki URL 
      volumeMounts:
        - name: shared-data
          mountPath: /etc/slog
        - name: promtail-config
          mountPath: /etc/promtail/promtail.yaml
          subPath: promtail.yaml

configs:
  - name: promtail-configmap
    namespace: somaz
    datas:
      config.yml: |
        client:
          url: http://loki.somaz.link/loki/api/v1/push # loki URL
          tls_config:
            insecure_skip_verify: true
        positions:
          filename: /tmp/positions.yaml
        server:
          http_listen_port: 3100
        target_config:
          sync_period: 10s
        scrape_configs:
          - job_name: somaz-request
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: request
                  __path__: "/etc/slog/request.log.*"
          - job_name: somaz-analysis
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: analysis
                  __path__: "/etc/slog/analysis.log.*"
          - job_name: somaz-errors
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: errors
                  __path__: "/etc/slog/errors.log.*"
  - name: somaz-config
    namespace: somaz
    datas:
      SERVER_NAME: somaz
      SERVER_PORT: 8080
      REDIS_DB_HOST: 10.10.10.10 
      REDIS_DB_PORT: 6379
      DB_CONNECTION_LIMIT: 10
      ADMIN_DB_HOST: 10.10.10.10
      ADMIN_DB_PORT: 3306
      ADMIN_DB_NAME: admin
      COMMON_DB_HOST: 10.10.10.10
      COMMON_DB_PORT: 3306
      COMMON_DB_NAME: common
      COMMON_DB_SYNCHRONIZE: false
      MONGO_LOG_SERVER_HOST: https://mongo-log.somaz.link # mongodb URL
      MONGO_LOG_SERVER_X_API_KEY: somaz-super-user

externalSecrets:
  - name: somaz-database
    backendType: gcpSecretsManager
    namespace: somaz
    datas:
      - key: somaz-database
        property: username
        name: COMMON_DB_ID
      - key: somaz-database
        property: password
        name: COMMON_DB_PW
      - key: somaz-database
        property: username
        name: ADMIN_DB_ID
      - key: somaz-database
        property: password
        name: ADMIN_DB_PW
      - key: somaz-database
        property: somaz-bastion-user
        name: SOMAZ_BASTION_USER
      - key: somaz-database
        property: somaz-bastion-pem-key
        name: SOMAZ_BASTION_PEM_KEY

# Use https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/filestore-csi-xpn?hl=ko

storageClasses:
  - name: somaz-sharedvpc-fs-sc
    provisioner: filestore.csi.storage.gke.io
    reclaimPolicy: Retain
    network: projects/HOST_PROJECT_ID/global/networks/SHARED_VPC_NAME # Change your HOST_PROJECT_ID and SHARED_VPC_NAME
    reserved_ip_range: RESERVED_IP_RANGE_NAME # firestore instance provisioning IP Range 
    allowVolumeExpansion: true

persistentVolumes:
  - name: somaz-sharedvpc-fs-pv
    storage: 5Gi
    volumeModes: Filesystem
    accessModes:
      - ReadWriteMany
    reclaimPolicy: Retain
    storageClassName: somaz-sharedvpc-fs-sc
    nfs:
      path: /vol1
      server: <filestore-ip>

persistentVolumeClaims:
  - name: somaz-sharedvpc-fs-pvc
    storage: 5Gi
    accessModes:
      - ReadWriteMany
    storageClassName: somaz-sharedvpc-fs-sc
    volumeName: somaz-sharedvpc-fs-pv
    mountPath: /app/data

volumes:
  - name: promtail-config
    configMap:
      name: promtail-configmap
      items:
        - key: config.yml
          path: promtail.yaml
  - name: shared-data
    emptyDir: {}

secretVolume:
  enabled: true   # false if don't use secretvolume  
  secretVolumeName: somaz-bastion-key-secret
  secretVolumeMountPath: "/etc/ssh"
  secretVolumeReadOnly: true
  secretName: somaz-database
  key: SOMAZ_BASTION_PEM_KEY
  Path: somaz_bastion.pem

