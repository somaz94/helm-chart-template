# Default values for external-dns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Global image pull secrets.
  imagePullSecrets: []

image:
  # -- Image repository for the `external-dns` container.
  repository: registry.k8s.io/external-dns/external-dns
  # -- (string) Image tag for the `external-dns` container, this will default to `.Chart.AppVersion` if not set.
  tag:
  # -- Image pull policy for the `external-dns` container.
  pullPolicy: IfNotPresent


serviceAccount:
  # -- If `true`, create a new `ServiceAccount`.
  create: true
  # -- Labels to add to the service account.
  labels: {}
  # -- Annotations to add to the service account.
  annotations: {}
  # -- (string) If this is set and `serviceAccount.create` is `true` this will be used for the created `ServiceAccount` name, if set and `serviceAccount.create` is `false` then this will define an existing `ServiceAccount` to use.
  #  # AWS IAM role for service account를 사용하는 경우
  #   eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT-ID:role/your-role"
  name:
  # -- Set this to `false` to [opt out of API credential automounting](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#opt-out-of-api-credential-automounting) for the `ServiceAccount`.
  automountServiceAccountToken:

service:
  # -- Service annotations.
  annotations: {}
  # -- Service HTTP port.
  port: 7979
  # -- Service IP families.
  ipFamilies: []
  # -- (string) Service IP family policy.
  ipFamilyPolicy:

rbac:
  # -- If `true`, create a `ClusterRole` & `ClusterRoleBinding` with access to the Kubernetes API.
  create: true
  # -- Additional rules to add to the `ClusterRole`.
  additionalPermissions: []

# -- [Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `external-dns` container.
env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/secrets/service-account/credentials.json

# -- Extra [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) for the `Pod`.
extraVolumes:
  - name: google-service-account
    secret:
      secretName: external-dns

# -- Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `external-dns` container.
extraVolumeMounts:
  - name: google-service-account
    mountPath: /etc/secrets/service-account/

# -- _Kubernetes_ resources to monitor for DNS entries.
sources:
  - service
  - ingress

# -- How DNS records are synchronized between sources and providers; available values are `sync` & `upsert-only`.
# DNS 레코드 동기화 정책
# 'sync': 관리되지 않는 레코드 삭제
# 'upsert-only': 레코드 생성/수정만 하고 삭제는 하지 않음
policy: upsert-only

# -- Specify the registry for storing ownership and labels.
# Valid values are `txt`, `aws-sd`, `dynamodb` & `noop`.
registry: txt
# -- (string) Specify an identifier for this instance of _ExternalDNS_ wWhen using a registry other than `noop`.
txtOwnerId: # HostedZoneId
# -- (string) Specify a prefix for the domain names of TXT records created for the `txt` registry.
# Mutually exclusive with `txtSuffix`.
txtPrefix:
# -- (string) Specify a suffix for the domain names of TXT records created for the `txt` registry.
# Mutually exclusive with `txtPrefix`.
txtSuffix:

# -- Limit possible target zones by domain suffixes.
domainFilters: []
# domainFilters: 
#   - "somaz.link"

# -- Record types to manage (default: A, AAAA, CNAME)
managedRecordTypes: []

# -- Log format. # google cloud logs parses severity of the "text" log format incorrectly (default is txt
logFormat: json

provider:
  # -- _ExternalDNS_ provider name; for the available providers and how to configure them see [README](https://github.com/kubernetes-sigs/external-dns/blob/master/charts/external-dns/README.md#providers).
  name: google
  webhook:
    image:
      # -- (string) Image repository for the `webhook` container.
      repository:
      # -- (string) Image tag for the `webhook` container.
      tag:
      # -- Image pull policy for the `webhook` container.
      pullPolicy: IfNotPresent
    # -- [Environment variables](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/) for the `webhook` container.
    env: []
    # -- Extra arguments to provide for the `webhook` container.
    args: []
    # -- Extra [volume mounts](https://kubernetes.io/docs/concepts/storage/volumes/) for the `webhook` container.
    extraVolumeMounts: []
    # -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for the `webhook` container.
    resources: {}
    # -- [Pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) for the `webhook` container.
    # @default -- See _values.yaml_
    securityContext: {}
    # -- [Liveness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `external-dns` container.
    # @default -- See _values.yaml_
    livenessProbe:
      httpGet:
        path: /healthz
        port: http-webhook
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 2
      successThreshold: 1
    # -- [Readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) configuration for the `webhook` container.
    # @default -- See _values.yaml_
    readinessProbe:
      httpGet:
        path: /healthz
        port: http-webhook
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    service:
      # -- Webhook exposed HTTP port for the service.
      port: 8080
    # -- Optional [Service Monitor](https://prometheus-operator.dev/docs/operator/design/#servicemonitor) configuration for the `webhook` container.
    # @default -- See _values.yaml_
    serviceMonitor:
      interval:
      scheme:
      tlsConfig: {}
      bearerTokenFile:
      scrapeTimeout:
      metricRelabelings: []
      relabelings: []

# -- Extra arguments to provide to _ExternalDNS_.
extraArgs:
  - --google-zone-visibility=public  # Use this to filter to only zones with this visibility. Set to either 'public' or 'private'. Omitting will match public and private zones
  - --google-project=dns-project  # Use this to specify a project different from the one external-dns is running inside

secretConfiguration:
  # -- If `true`, create a `Secret` to store sensitive provider configuration (**DEPRECATED**).
  enabled: false
  # -- Mount path for the `Secret`, this can be templated.
  mountPath:
  # -- Sub-path for mounting the `Secret`, this can be templated.
  subPath:
  # -- `Secret` data.
  data: {}
